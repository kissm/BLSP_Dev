package com.lpcode.modules.blsp.entity;

import java.util.ArrayList;
import java.util.List;

public class MessageTplParaExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    protected int start = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    protected int pageSize = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public MessageTplParaExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public void setStart(int start) {
        this.start=start;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public int getStart() {
        return start;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public void setPageSize(int pageSize) {
        this.pageSize=pageSize;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTplidIsNull() {
            addCriterion("tplid is null");
            return (Criteria) this;
        }

        public Criteria andTplidIsNotNull() {
            addCriterion("tplid is not null");
            return (Criteria) this;
        }

        public Criteria andTplidEqualTo(String value) {
            addCriterion("tplid =", value, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidNotEqualTo(String value) {
            addCriterion("tplid <>", value, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidGreaterThan(String value) {
            addCriterion("tplid >", value, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidGreaterThanOrEqualTo(String value) {
            addCriterion("tplid >=", value, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidLessThan(String value) {
            addCriterion("tplid <", value, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidLessThanOrEqualTo(String value) {
            addCriterion("tplid <=", value, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidLike(String value) {
            addCriterion("tplid like", value, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidNotLike(String value) {
            addCriterion("tplid not like", value, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidIn(List<String> values) {
            addCriterion("tplid in", values, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidNotIn(List<String> values) {
            addCriterion("tplid not in", values, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidBetween(String value1, String value2) {
            addCriterion("tplid between", value1, value2, "tplid");
            return (Criteria) this;
        }

        public Criteria andTplidNotBetween(String value1, String value2) {
            addCriterion("tplid not between", value1, value2, "tplid");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andParatypeIsNull() {
            addCriterion("paratype is null");
            return (Criteria) this;
        }

        public Criteria andParatypeIsNotNull() {
            addCriterion("paratype is not null");
            return (Criteria) this;
        }

        public Criteria andParatypeEqualTo(String value) {
            addCriterion("paratype =", value, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeNotEqualTo(String value) {
            addCriterion("paratype <>", value, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeGreaterThan(String value) {
            addCriterion("paratype >", value, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeGreaterThanOrEqualTo(String value) {
            addCriterion("paratype >=", value, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeLessThan(String value) {
            addCriterion("paratype <", value, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeLessThanOrEqualTo(String value) {
            addCriterion("paratype <=", value, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeLike(String value) {
            addCriterion("paratype like", value, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeNotLike(String value) {
            addCriterion("paratype not like", value, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeIn(List<String> values) {
            addCriterion("paratype in", values, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeNotIn(List<String> values) {
            addCriterion("paratype not in", values, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeBetween(String value1, String value2) {
            addCriterion("paratype between", value1, value2, "paratype");
            return (Criteria) this;
        }

        public Criteria andParatypeNotBetween(String value1, String value2) {
            addCriterion("paratype not between", value1, value2, "paratype");
            return (Criteria) this;
        }

        public Criteria andNotnullIsNull() {
            addCriterion("notnull is null");
            return (Criteria) this;
        }

        public Criteria andNotnullIsNotNull() {
            addCriterion("notnull is not null");
            return (Criteria) this;
        }

        public Criteria andNotnullEqualTo(Integer value) {
            addCriterion("notnull =", value, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullNotEqualTo(Integer value) {
            addCriterion("notnull <>", value, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullGreaterThan(Integer value) {
            addCriterion("notnull >", value, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullGreaterThanOrEqualTo(Integer value) {
            addCriterion("notnull >=", value, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullLessThan(Integer value) {
            addCriterion("notnull <", value, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullLessThanOrEqualTo(Integer value) {
            addCriterion("notnull <=", value, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullIn(List<Integer> values) {
            addCriterion("notnull in", values, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullNotIn(List<Integer> values) {
            addCriterion("notnull not in", values, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullBetween(Integer value1, Integer value2) {
            addCriterion("notnull between", value1, value2, "notnull");
            return (Criteria) this;
        }

        public Criteria andNotnullNotBetween(Integer value1, Integer value2) {
            addCriterion("notnull not between", value1, value2, "notnull");
            return (Criteria) this;
        }

        public Criteria andRegIsNull() {
            addCriterion("reg is null");
            return (Criteria) this;
        }

        public Criteria andRegIsNotNull() {
            addCriterion("reg is not null");
            return (Criteria) this;
        }

        public Criteria andRegEqualTo(String value) {
            addCriterion("reg =", value, "reg");
            return (Criteria) this;
        }

        public Criteria andRegNotEqualTo(String value) {
            addCriterion("reg <>", value, "reg");
            return (Criteria) this;
        }

        public Criteria andRegGreaterThan(String value) {
            addCriterion("reg >", value, "reg");
            return (Criteria) this;
        }

        public Criteria andRegGreaterThanOrEqualTo(String value) {
            addCriterion("reg >=", value, "reg");
            return (Criteria) this;
        }

        public Criteria andRegLessThan(String value) {
            addCriterion("reg <", value, "reg");
            return (Criteria) this;
        }

        public Criteria andRegLessThanOrEqualTo(String value) {
            addCriterion("reg <=", value, "reg");
            return (Criteria) this;
        }

        public Criteria andRegLike(String value) {
            addCriterion("reg like", value, "reg");
            return (Criteria) this;
        }

        public Criteria andRegNotLike(String value) {
            addCriterion("reg not like", value, "reg");
            return (Criteria) this;
        }

        public Criteria andRegIn(List<String> values) {
            addCriterion("reg in", values, "reg");
            return (Criteria) this;
        }

        public Criteria andRegNotIn(List<String> values) {
            addCriterion("reg not in", values, "reg");
            return (Criteria) this;
        }

        public Criteria andRegBetween(String value1, String value2) {
            addCriterion("reg between", value1, value2, "reg");
            return (Criteria) this;
        }

        public Criteria andRegNotBetween(String value1, String value2) {
            addCriterion("reg not between", value1, value2, "reg");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated do_not_delete_during_merge Mon Jun 20 17:28:14 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mg_message_tpl_para
     *
     * @mbggenerated Mon Jun 20 17:28:14 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}